# -*- coding: utf-8 -*-
"""Copy of Assignment - Introduction to NumPy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nC2HhGl4cSgyEXDyA18NivBxKsn4_x7b

# <u> Use only those concepts which have been taught till now </u>
"""

import numpy as np

"""# <u>**Problem 1**</u>

### Construct a 2-D $10*10$ matrix with the following constraints:

*  ####  The element at $[0,0]$ should be 1
*  ####   The element at $[0,9]$ should be 100
* ####   The element at $[9,0]$ should be 50
* ####   The interval between elements in rows should be constant
* ####   The interval between elements in columns should be constant


"""

# Your code here
row=np.linspace(1,50,10)
list1=[]
for i in row:
  list1.append(np.linspace(i,i+99,10))

array=np.around(np.array(list1).reshape(10,10),1)
print(array)

"""#<u>**Problem 2**</u>

### Construct a 2-D $10*10$ matrix with the diagonal elements equal to zero and all the other elements equal to 1
"""

# Your code below:       # Hint : Use nested for loops
x=np.ones((10,10),dtype=int)
for i in range(len(x)):
  for j in range(len(x[i])):
    if i==j:
      x[i,j]=0
print(x)

"""# <u>**Problem 3**</u>

### Construct a list of first 100 natural numbers.Create a two dimensional array with 10 rows and whose each row contains 10 columns and each number in this array is the square of the number from your constructed list.

### For example : [[1,4,9,...,100],[121,144,...],......,]
"""

# Your code below ..
size=100
l=[num**2 for num in range(1,size+1,1)]
A=np.asarray(l)
A.shape=(10,10)
print(A)

"""#<u>**Problem 4**</u>

### You are given an image below. Experiment with the numpy slice operation to only get the face of the person in the image
"""

# Importing data from the skimage library. Don't worry much about it
 from skimage import data
 camera = data.camera()

# Camera is 2-D array object
camera.shape

camera

# You can plot the camera object and see the image
import matplotlib.pyplot as plt
plt.imshow(camera)

# Perform your slice operation here to get the face of the person
camera_slice =camera[60:240,160:260]
plt.imshow(camera_slice)

